----------------------------------------------------------------------------------------------------------------------
-- |                                  CRIACAO DO ESQUEMA DA BASE DE DADOS BRIDGE                                  | --
----------------------------------------------------------------------------------------------------------------------

--caso o usuário já tenha as tabelas, é preciso resetar elas, junto com as dependências associadas.
BEGIN
  --eclui tabelas se já existirem
  FOR tab IN (SELECT table_name FROM user_tables WHERE table_name IN (
    'POSSUI', 'PARTICIPA', 'SONDA', 'PRIMARIA', 'NAVE_ESPACIAL', 'ESTUDA',
    'REALIZA', 'TRIPULANTE', 'OBSERVACAO', 'EVENTOS_ASTRONOMICOS', 'TAREFA',
    'MISSAO', 'SATELITES_NATURAIS', 'POSTO_AVANCADO', 'PLANETA', 'ATMOSFERA',
    'MINERAL', 'FAUNA_FLORA', 'RECURSO_NATURAL', 'SISTEMA_PLANETARIO'
  ))
  LOOP
    EXECUTE IMMEDIATE 'DROP TABLE ' || tab.table_name || ' CASCADE CONSTRAINTS';
  END LOOP;
EXCEPTION
  WHEN OTHERS THEN
    NULL; --evita erros caso as tabelas não existam
END;
/
----------------------------------------------------------------------------------------
--esses são os comandos para a criação do esquema da base do PlanetDATA

CREATE TABLE SISTEMA_PLANETARIO (
    NOME VARCHAR2(50) NOT NULL,
    IDADE NUMBER(9,2),
    ASTROS VARCHAR2(255),
    QUANTIDADE_DE_PLANETAS NUMBER DEFAULT '0',
    CONSTRAINT PK_SISTEMAPLANETARIO PRIMARY KEY (NOME)
);

----------------------------------------------------------------------------------------
CREATE TABLE RECURSO_NATURAL (
    NUM_CATALOGACAO NUMBER NOT NULL,
    LOCALIZACAO NUMBER,
    TIPO VARCHAR2(14) NOT NULL,
    EXPLORAVEL CHAR(1) DEFAULT 'F' NOT NULL, -- 'T' para true, 'F' para false
    QUILOGRAMA FLOAT,
    METROS FLOAT,
    CONSTRAINT PK_RECURSO_NATURAL PRIMARY KEY (NUM_CATALOGACAO),
    CONSTRAINT CK_RECNAT CHECK(UPPER(TIPO) IN ('FAUNA E FLORA', 'MINERAL', 'ATMOSFERA')),
    CONSTRAINT CK_LOCALIZACAO CHECK(REGEXP_LIKE(LOCALIZACAO, '^[-+]?([0-9]*[.])?[0-9]+$'))
);
----------------------------------------------------------------------------------------
CREATE TABLE FAUNA_FLORA (
    NUM_CATALOGACAO NUMBER NOT NULL,
    NOME_CIENTIFICO VARCHAR2(100),
    HABITAT VARCHAR2(50),
    EXPECTATIVA_VIDA NUMBER,
    CONSTRAINT PK_FAUNA_FLORA PRIMARY KEY (NUM_CATALOGACAO),
    CONSTRAINT FK_FAUNA_FLORA FOREIGN KEY (NUM_CATALOGACAO) REFERENCES RECURSO_NATURAL(NUM_CATALOGACAO) ON DELETE CASCADE
);
----------------------------------------------------------------------------------------
CREATE TABLE MINERAL (
    NUM_CATALOGACAO NUMBER NOT NULL,
    NOME VARCHAR2(50) NOT NULL,
    COMPOSICAO_QUIMICA VARCHAR2(50) NOT NULL,
    UTILIZACAO VARCHAR2(50),
    CONSTRAINT PK_MINERAL PRIMARY KEY (NUM_CATALOGACAO),
    CONSTRAINT FK_MINERAL FOREIGN KEY (NUM_CATALOGACAO) REFERENCES RECURSO_NATURAL(NUM_CATALOGACAO) ON DELETE CASCADE
);
----------------------------------------------------------------------------------------
CREATE TABLE ATMOSFERA (
    NUM_CATALOGACAO NUMBER NOT NULL,
    PRESSAO FLOAT NOT NULL,
    COMPOSICAO VARCHAR2(100) NOT NULL,
    TEMPERATURA VARCHAR2(10) NOT NULL,
    CONSTRAINT PK_ATMOSFERA PRIMARY KEY (NUM_CATALOGACAO),
    CONSTRAINT FK_ATMOSFERA FOREIGN KEY (NUM_CATALOGACAO) REFERENCES RECURSO_NATURAL(NUM_CATALOGACAO) ON DELETE CASCADE,
    CONSTRAINT CK_ATM_TEMP CHECK (REGEXP_LIKE(TEMPERATURA, '^[-+]?[0-9]*\.?[0-9]+°C$'))
);
----------------------------------------------------------------------------------------
CREATE TABLE PLANETA (
  NOME VARCHAR2(50) NOT NULL,
  IDADE NUMBER DEFAULT 0, --para representar os bilhões de anos 
  SISTEMA_PLANETARIO VARCHAR2(50) NOT NULL,
  CONSTRAINT PK_PLANETA PRIMARY KEY (SISTEMA_PLANETARIO,NOME),
  CONSTRAINT FK_PLANETA FOREIGN KEY (SISTEMA_PLANETARIO) REFERENCES SISTEMA_PLANETARIO(NOME)ON DELETE CASCADE
);
----------------------------------------------------------------------------------------
CREATE TABLE POSTO_AVANCADO (
  NOME VARCHAR2(50) NOT NULL,
  DATA_CONSTRUCAO DATE NOT NULL,
  COMPUTADOR CHAR(1) NOT NULL, -- 'T' para true, 'F' para false
  SATELITE CHAR(1) NOT NULL,   -- 'T' para true, 'F' para false
  SISTEMA_PLANETARIO VARCHAR2(50) NOT NULL,
  PLANETA VARCHAR2(50) NOT NULL,
  CONSTRAINT PK_POSTO_AVANCADO PRIMARY KEY (NOME),
  CONSTRAINT FK_POSTO_AVANCADO FOREIGN KEY (SISTEMA_PLANETARIO, PLANETA) REFERENCES PLANETA(SISTEMA_PLANETARIO, NOME) ON DELETE CASCADE
);
----------------------------------------------------------------------------------------
CREATE TABLE SATELITES_NATURAIS (
  NOME VARCHAR2(50) NOT NULL,
  SISTEMA_PLANETARIO VARCHAR2(50) NOT NULL,
  PLANETA VARCHAR2(50) NOT NULL,
  CONSTRAINT PK_SATELITES_NATURAIS PRIMARY KEY (NOME,SISTEMA_PLANETARIO,PLANETA),
  CONSTRAINT FK_SATELITES_NATURAIS FOREIGN KEY (SISTEMA_PLANETARIO, PLANETA) REFERENCES PLANETA(SISTEMA_PLANETARIO, NOME) ON DELETE CASCADE
);
----------------------------------------------------------------------------------------
CREATE TABLE MISSAO (
  CODIGO NUMBER NOT NULL,
  DURACAO FLOAT NOT NULL,
  STATUS VARCHAR(12) NOT NULL, 
  SISTEMA_PLANETARIO VARCHAR2(50) NOT NULL,
  PLANETA VARCHAR2(50) NOT NULL,
  CONSTRAINT PK_MISSAO PRIMARY KEY (CODIGO),
  CONSTRAINT FK_MISSAO FOREIGN KEY (SISTEMA_PLANETARIO, PLANETA) REFERENCES PLANETA(SISTEMA_PLANETARIO, NOME) ON DELETE CASCADE,
  CONSTRAINT CK_STATUS CHECK(UPPER(STATUS) IN ('TERMINADA','EM ANDAMENTO'))
);
----------------------------------------------------------------------------------------
CREATE TABLE TAREFA (
  ID NUMBER NOT NULL,
  CATEGORIA VARCHAR2(14) NOT NULL,
  NUMERO NUMBER NOT NULL,
  CODIGO NUMBER NOT NULL,
  DATA DATE NOT NULL,
  CONCLUIDA CHAR(1) DEFAULT 'F' NOT NULL, -- 'T' para true, 'F' para false
  CONSTRAINT PK_TAREFA PRIMARY KEY (ID),
  CONSTRAINT UN_TAREFA UNIQUE(CATEGORIA, NUMERO, CODIGO),
  CONSTRAINT FK_TAREFA FOREIGN KEY (CODIGO) REFERENCES MISSAO(CODIGO) ON DELETE CASCADE,
  CONSTRAINT CK_CATEGORIA CHECK(UPPER(CATEGORIA) IN ('PESQUISA','CONSTRUÇÃO','REPARO','DOCUMENTAÇÃO')) 
);
----------------------------------------------------------------------------------------
CREATE TABLE EVENTOS_ASTRONOMICOS (
  TIPO VARCHAR2(30) NOT NULL,
  NOME VARCHAR2(50) NOT NULL,
  FATALIDADE VARCHAR2(10) NOT NULL,
  CONSTRAINT PK_EVENTOS PRIMARY KEY (TIPO),
  CONSTRAINT CK_FATALIDADE CHECK(UPPER(FATALIDADE) IN ('NORMAL','RISCO','FATAL')) 
);
----------------------------------------------------------------------------------------
CREATE TABLE OBSERVACAO (
  ID NUMBER NOT NULL,
  DATA DATE NOT NULL,
  HORA INTERVAL DAY TO SECOND NOT NULL, 
  TIPO VARCHAR2(30) NOT NULL,
  DURACAO FLOAT NOT NULL,
  SISTEMA_PLANETARIO VARCHAR2(50) NOT NULL,
  PLANETA VARCHAR2(50) NOT NULL,
  CONSTRAINT PK_OBSERVACAO PRIMARY KEY (ID),
  CONSTRAINT UN_OBSERVACAO UNIQUE (DATA,HORA,TIPO,SISTEMA_PLANETARIO,PLANETA),
  CONSTRAINT FK_OBSERVACAO1 FOREIGN KEY (SISTEMA_PLANETARIO, PLANETA) REFERENCES PLANETA(SISTEMA_PLANETARIO, NOME) ON DELETE CASCADE,
  CONSTRAINT FK_OBSERVACAO2 FOREIGN KEY (TIPO) REFERENCES EVENTOS_ASTRONOMICOS(TIPO) ON DELETE CASCADE
);
----------------------------------------------------------------------------------------
CREATE TABLE TRIPULANTE (
    ID_ESPACIAL NUMBER NOT NULL,
    NOME VARCHAR2 (50) NOT NULL,
    GENERO VARCHAR2(10) NOT NULL,
    FUNCAO1 VARCHAR2(10) NOT NULL,
    FUNCAO2 VARCHAR2(10),
    CONSTRAINT PK_TRIPULANTE PRIMARY KEY (ID_ESPACIAL),
    CONSTRAINT CK_GENERO CHECK(UPPER(GENERO) IN ('FEMININO', 'MASCULINO')),
    CONSTRAINT CK_FUNCAO1 CHECK(UPPER(FUNCAO1) IN ('CIENTISTA', 'ENGENHEIRO', 'ASTRÔNOMO', 'PILOTO')),
    CONSTRAINT CK_FUNCAO2 CHECK(UPPER(FUNCAO2) IN ('CIENTISTA', 'ENGENHEIRO', 'ASTRÔNOMO', 'PILOTO'))
);
----------------------------------------------------------------------------------------
CREATE TABLE REALIZA (
    TRIPULANTE NUMBER NOT NULL,
    TAREFA NUMBER NOT NULL,
    CONSTRAINT PK_REALIZA PRIMARY KEY (TRIPULANTE,TAREFA),
    CONSTRAINT FK_ID_ESPACIAL FOREIGN KEY (TRIPULANTE) REFERENCES TRIPULANTE(ID_ESPACIAL) ON DELETE CASCADE,
    CONSTRAINT FK_ID_TAREFA FOREIGN KEY (TAREFA) REFERENCES TAREFA(ID) ON DELETE CASCADE
);
----------------------------------------------------------------------------------------
CREATE TABLE ESTUDA (
    TRIPULANTE NUMBER NOT NULL,
    OBSERVACAO NUMBER NOT NULL,
    CONSTRAINT PK_ESTUDA PRIMARY KEY (TRIPULANTE,OBSERVACAO),
    CONSTRAINT FK_ESTUDA FOREIGN KEY (TRIPULANTE) REFERENCES TRIPULANTE(ID_ESPACIAL) ON DELETE CASCADE,
    CONSTRAINT FK_ID_OBSERVACAO FOREIGN KEY (OBSERVACAO) REFERENCES OBSERVACAO(ID) ON DELETE CASCADE
);
----------------------------------------------------------------------------------------
CREATE TABLE NAVE_ESPACIAL (
    NUM_FABRICACAO NUMBER NOT NULL,
    DATA_FABRICACAO DATE,
    TIPO VARCHAR2(15) NOT NULL,
    CONSTRAINT PK_NAVE PRIMARY KEY (NUM_FABRICACAO),
    CONSTRAINT CK_TIPO CHECK(UPPER(TIPO) IN ('PRIMÁRIA', 'SECUNDÁRIA', 'SONDA')) 
);
----------------------------------------------------------------------------------------
CREATE TABLE PRIMARIA (
    NUM_FABRICACAO INT NOT NULL,
    CONSTRAINT PK_PRIMARIA PRIMARY KEY (NUM_FABRICACAO),
    CONSTRAINT FK_NAVE_PRIMARIA FOREIGN KEY (NUM_FABRICACAO) REFERENCES NAVE_ESPACIAL(NUM_FABRICACAO) ON DELETE CASCADE
);
----------------------------------------------------------------------------------------
CREATE TABLE SONDA (
    NUM_FABRICACAO INT NOT NULL,
    SISTEMA_PLANETARIO VARCHAR2(50) NOT NULL,
    PLANETA VARCHAR2(50) NOT NULL,
    PRIMARIA INT NOT NULL,
    ESTADO VARCHAR2(15) CHECK (ESTADO IN('ACOPLADA','MANUTENÇÃO')),
    DATA_ACOPLAMENTO DATE,
    CONSTRAINT PK_SONDA PRIMARY KEY (NUM_FABRICACAO),
    CONSTRAINT FK_SONDA FOREIGN KEY (SISTEMA_PLANETARIO, PLANETA) REFERENCES PLANETA(SISTEMA_PLANETARIO, NOME) ON DELETE CASCADE,
    CONSTRAINT FK_SONDA_PRIMARIA FOREIGN KEY (PRIMARIA) REFERENCES PRIMARIA(NUM_FABRICACAO) ON DELETE CASCADE,
    CONSTRAINT FK_NAVE_SONDA FOREIGN KEY (NUM_FABRICACAO) REFERENCES NAVE_ESPACIAL(NUM_FABRICACAO) ON DELETE CASCADE
);
----------------------------------------------------------------------------------------
CREATE TABLE PARTICIPA (
    TRIPULANTE INT NOT NULL,
    MISSAO INT NOT NULL,
    NAVE_ESPACIAL INT NOT NULL,
    CONSTRAINT PK_PARTICIPA PRIMARY KEY (TRIPULANTE, MISSAO),
    CONSTRAINT FK_PARTICIPA_TRIP FOREIGN KEY (TRIPULANTE) REFERENCES TRIPULANTE(ID_ESPACIAL) ON DELETE CASCADE,
    CONSTRAINT FK_PARTICIPA_MISSAO FOREIGN KEY (MISSAO) REFERENCES MISSAO(CODIGO) ON DELETE CASCADE,
    CONSTRAINT FK_PARTICIPA_NAVE FOREIGN KEY (NAVE_ESPACIAL) REFERENCES NAVE_ESPACIAL(NUM_FABRICACAO) ON DELETE CASCADE
);
----------------------------------------------------------------------------------------
CREATE TABLE POSSUI (
    RECURSO_NATURAL INT NOT NULL,
    SISTEMA_PLANETARIO VARCHAR2(50) NOT NULL,
    PLANETA VARCHAR2(50) NOT NULL,
    CONSTRAINT PK_POSSUI PRIMARY KEY (RECURSO_NATURAL, SISTEMA_PLANETARIO, PLANETA),
    CONSTRAINT FK_POSSUI_REC FOREIGN KEY (RECURSO_NATURAL) REFERENCES RECURSO_NATURAL(NUM_CATALOGACAO) ON DELETE CASCADE,
    CONSTRAINT FK_POSSUI_PLANETA FOREIGN KEY (SISTEMA_PLANETARIO, PLANETA) REFERENCES PLANETA(SISTEMA_PLANETARIO, NOME) ON DELETE CASCADE
);