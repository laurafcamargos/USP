LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_unsigned.all;

ENTITY ram32bits IS
    PORT (
        address : IN  STD_LOGIC_VECTOR(4 DOWNTO 0); -- 5-bit address for 32 locations
        clock   : IN  STD_LOGIC;
        dataIn  : IN  STD_LOGIC_VECTOR(3 DOWNTO 0); -- 4-bit input data
        write   : IN  STD_LOGIC; -- write enable signal
        dataOut : OUT STD_LOGIC_VECTOR(3 DOWNTO 0) -- 4-bit output data
    );
END ram32bits;

ARCHITECTURE Behavior OF ram32bits IS

	TYPE mem IS ARRAY(0 TO 31) OF STD_LOGIC_VECTOR(3 DOWNTO 0);
	SIGNAL memory_array : mem;

BEGIN
	process(address, clock, dataIn, write, dataOut)
	begin
		if rising_edge(clk) and write = '1' then
			memory_array(address) <= dataIn;
		end if;
		
		dataOut <= memory_array(address);
		
	end process;
END Behavior;
